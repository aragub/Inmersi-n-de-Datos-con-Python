{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyMAdfN9txz5m4DOHmSvsPsb",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/sheilidi/Inmersi-n-de-Datos-con-Python/blob/main/Clase%202%20desaf%C3%ADo%20de%20graficas%20\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Bienvenido a nuestro primer ecuentro de inmersion de datos\n"
      ],
      "metadata": {
        "id": "-zwu2rbWoGeL"
      }
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Sv-p6AQ4mXSv",
        "outputId": "09626527-1dba-4ee5-b337-290880af7182"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Mounted at /content/drive\n"
          ]
        }
      ],
      "source": [
        "from google.colab import drive\n",
        "\n",
        "drive.mount(\"/content/drive\")"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "\n",
        "inmuebles = pd.read_csv (\"/content/inmuebles_bogota.csv\")\n",
        "\n",
        "inmuebles.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 206
        },
        "id": "ec4u74sSsSFh",
        "outputId": "d971ba9d-a6b3-4916-efab-ff8a47bc892d"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "          Tipo                                 Descripcion  Habitaciones  \\\n",
              "0  Apartamento  Apartamento en venta en Zona Noroccidental             3   \n",
              "1         Casa                   Casa en venta en Castilla             4   \n",
              "2  Apartamento     Apartamento en venta en Chico Reservado             3   \n",
              "3  Apartamento             Apartamento en venta en Usaquén             3   \n",
              "4  Apartamento         Apartamento en venta en Bella Suiza             2   \n",
              "\n",
              "   Baños  Área              Barrio                                    UPZ  \\\n",
              "0      2    70  Zona Noroccidental     CHAPINERO: Pardo Rubio + Chapinero   \n",
              "1      3   170            Castilla            KENNEDY: Castilla + Bavaria   \n",
              "2      3   144     Chico Reservado     CHAPINERO: Chicó Lago + El Refugio   \n",
              "3      2   154             Usaquén                                Usaquén   \n",
              "4      3   128         Bella Suiza  USAQUÉN: Country Club + Santa Bárbara   \n",
              "\n",
              "             Valor  \n",
              "0    $ 360.000.000  \n",
              "1    $ 670.000.000  \n",
              "2  $ 1.120.000.000  \n",
              "3    $ 890.000.000  \n",
              "4    $ 970.000.000  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-28971d9c-a95e-4482-8d9f-5eab3c93aa11\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Tipo</th>\n",
              "      <th>Descripcion</th>\n",
              "      <th>Habitaciones</th>\n",
              "      <th>Baños</th>\n",
              "      <th>Área</th>\n",
              "      <th>Barrio</th>\n",
              "      <th>UPZ</th>\n",
              "      <th>Valor</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Apartamento</td>\n",
              "      <td>Apartamento en venta en Zona Noroccidental</td>\n",
              "      <td>3</td>\n",
              "      <td>2</td>\n",
              "      <td>70</td>\n",
              "      <td>Zona Noroccidental</td>\n",
              "      <td>CHAPINERO: Pardo Rubio + Chapinero</td>\n",
              "      <td>$ 360.000.000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Casa</td>\n",
              "      <td>Casa en venta en Castilla</td>\n",
              "      <td>4</td>\n",
              "      <td>3</td>\n",
              "      <td>170</td>\n",
              "      <td>Castilla</td>\n",
              "      <td>KENNEDY: Castilla + Bavaria</td>\n",
              "      <td>$ 670.000.000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Apartamento</td>\n",
              "      <td>Apartamento en venta en Chico Reservado</td>\n",
              "      <td>3</td>\n",
              "      <td>3</td>\n",
              "      <td>144</td>\n",
              "      <td>Chico Reservado</td>\n",
              "      <td>CHAPINERO: Chicó Lago + El Refugio</td>\n",
              "      <td>$ 1.120.000.000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Apartamento</td>\n",
              "      <td>Apartamento en venta en Usaquén</td>\n",
              "      <td>3</td>\n",
              "      <td>2</td>\n",
              "      <td>154</td>\n",
              "      <td>Usaquén</td>\n",
              "      <td>Usaquén</td>\n",
              "      <td>$ 890.000.000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Apartamento</td>\n",
              "      <td>Apartamento en venta en Bella Suiza</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "      <td>128</td>\n",
              "      <td>Bella Suiza</td>\n",
              "      <td>USAQUÉN: Country Club + Santa Bárbara</td>\n",
              "      <td>$ 970.000.000</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-28971d9c-a95e-4482-8d9f-5eab3c93aa11')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-28971d9c-a95e-4482-8d9f-5eab3c93aa11 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-28971d9c-a95e-4482-8d9f-5eab3c93aa11');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 3
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from google.colab import drive\n",
        "drive.mount('/content/drive')"
      ],
      "metadata": {
        "id": "Pq58ftxS6z01"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "inmuebles.shape"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "wM6DUIdNtHnT",
        "outputId": "01ad0946-8eb0-4fc5-b446-cdb4b41cf80f"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(9520, 8)"
            ]
          },
          "metadata": {},
          "execution_count": 2
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "inmuebles.columns"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "HmVaMMkOvm14",
        "outputId": "5412d213-8092-4611-9659-92ffe3989e78"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Index(['Tipo', 'Descripcion', 'Habitaciones', 'Baños', 'Área', 'Barrio', 'UPZ',\n",
              "       'Valor'],\n",
              "      dtype='object')"
            ]
          },
          "metadata": {},
          "execution_count": 27
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "columnas = {\"Baños\":\"Banos\", \"Área\": \"Area\"}\n",
        "inmuebles = inmuebles.rename(columns=columnas)\n",
        "inmuebles.sample(10)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 363
        },
        "id": "dnv-hnzhwU9P",
        "outputId": "c6107235-2277-4eb9-9699-51a789e9b028"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "             Tipo                                 Descripcion  Habitaciones  \\\n",
              "4772  Apartamento           Apartamento en venta en Pasadena              2   \n",
              "2686  Apartamento             Apartamento en venta en Usaquén             2   \n",
              "8829  Apartamento   Apartamento en venta en Chapinero Central             1   \n",
              "3687  Apartamento            Apartamento en venta en Cedritos             3   \n",
              "1978  Apartamento            Apartamento en venta en Fontibón             3   \n",
              "2637         Casa              Casa en venta en Santa Barbara             4   \n",
              "8104  Apartamento           Apartamento en venta en Chapinero             4   \n",
              "1416  Apartamento             Apartamento en venta en Modelia             3   \n",
              "8333  Apartamento  Apartamento en venta en Zona Noroccidental             3   \n",
              "8123  Apartamento             Apartamento en venta en Kennedy             3   \n",
              "\n",
              "      Banos  Area              Barrio                                    UPZ  \\\n",
              "4772      2    64           Pasadena                                     NaN   \n",
              "2686      2    68             Usaquén                                Usaquén   \n",
              "8829      1    26   Chapinero Central              Localidad Chapinero resto   \n",
              "3687      2   109            Cedritos                                Usaquén   \n",
              "1978      2    69            Fontibón                               Fontibón   \n",
              "2637      4   496       Santa Barbara  USAQUÉN: Country Club + Santa Bárbara   \n",
              "8104      3   123           Chapinero     CHAPINERO: Pardo Rubio + Chapinero   \n",
              "1416      2    87             Modelia                               Fontibón   \n",
              "8333      1    50  Zona Noroccidental     CHAPINERO: Pardo Rubio + Chapinero   \n",
              "8123      2    51             Kennedy                        Kennedy Central   \n",
              "\n",
              "                Valor  \n",
              "4772    $ 320.000.000  \n",
              "2686    $ 450.000.000  \n",
              "8829    $ 202.000.000  \n",
              "3687    $ 550.000.000  \n",
              "1978    $ 370.000.000  \n",
              "2637  $ 1.700.000.000  \n",
              "8104    $ 450.000.000  \n",
              "1416    $ 499.990.000  \n",
              "8333    $ 140.000.000  \n",
              "8123    $ 175.000.000  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-54d3dee1-de10-45e3-af24-a6d6dcd7315e\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Tipo</th>\n",
              "      <th>Descripcion</th>\n",
              "      <th>Habitaciones</th>\n",
              "      <th>Banos</th>\n",
              "      <th>Area</th>\n",
              "      <th>Barrio</th>\n",
              "      <th>UPZ</th>\n",
              "      <th>Valor</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>4772</th>\n",
              "      <td>Apartamento</td>\n",
              "      <td>Apartamento en venta en Pasadena</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>64</td>\n",
              "      <td>Pasadena</td>\n",
              "      <td>NaN</td>\n",
              "      <td>$ 320.000.000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2686</th>\n",
              "      <td>Apartamento</td>\n",
              "      <td>Apartamento en venta en Usaquén</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>68</td>\n",
              "      <td>Usaquén</td>\n",
              "      <td>Usaquén</td>\n",
              "      <td>$ 450.000.000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8829</th>\n",
              "      <td>Apartamento</td>\n",
              "      <td>Apartamento en venta en Chapinero Central</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>26</td>\n",
              "      <td>Chapinero Central</td>\n",
              "      <td>Localidad Chapinero resto</td>\n",
              "      <td>$ 202.000.000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3687</th>\n",
              "      <td>Apartamento</td>\n",
              "      <td>Apartamento en venta en Cedritos</td>\n",
              "      <td>3</td>\n",
              "      <td>2</td>\n",
              "      <td>109</td>\n",
              "      <td>Cedritos</td>\n",
              "      <td>Usaquén</td>\n",
              "      <td>$ 550.000.000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1978</th>\n",
              "      <td>Apartamento</td>\n",
              "      <td>Apartamento en venta en Fontibón</td>\n",
              "      <td>3</td>\n",
              "      <td>2</td>\n",
              "      <td>69</td>\n",
              "      <td>Fontibón</td>\n",
              "      <td>Fontibón</td>\n",
              "      <td>$ 370.000.000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2637</th>\n",
              "      <td>Casa</td>\n",
              "      <td>Casa en venta en Santa Barbara</td>\n",
              "      <td>4</td>\n",
              "      <td>4</td>\n",
              "      <td>496</td>\n",
              "      <td>Santa Barbara</td>\n",
              "      <td>USAQUÉN: Country Club + Santa Bárbara</td>\n",
              "      <td>$ 1.700.000.000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8104</th>\n",
              "      <td>Apartamento</td>\n",
              "      <td>Apartamento en venta en Chapinero</td>\n",
              "      <td>4</td>\n",
              "      <td>3</td>\n",
              "      <td>123</td>\n",
              "      <td>Chapinero</td>\n",
              "      <td>CHAPINERO: Pardo Rubio + Chapinero</td>\n",
              "      <td>$ 450.000.000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1416</th>\n",
              "      <td>Apartamento</td>\n",
              "      <td>Apartamento en venta en Modelia</td>\n",
              "      <td>3</td>\n",
              "      <td>2</td>\n",
              "      <td>87</td>\n",
              "      <td>Modelia</td>\n",
              "      <td>Fontibón</td>\n",
              "      <td>$ 499.990.000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8333</th>\n",
              "      <td>Apartamento</td>\n",
              "      <td>Apartamento en venta en Zona Noroccidental</td>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "      <td>50</td>\n",
              "      <td>Zona Noroccidental</td>\n",
              "      <td>CHAPINERO: Pardo Rubio + Chapinero</td>\n",
              "      <td>$ 140.000.000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8123</th>\n",
              "      <td>Apartamento</td>\n",
              "      <td>Apartamento en venta en Kennedy</td>\n",
              "      <td>3</td>\n",
              "      <td>2</td>\n",
              "      <td>51</td>\n",
              "      <td>Kennedy</td>\n",
              "      <td>Kennedy Central</td>\n",
              "      <td>$ 175.000.000</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-54d3dee1-de10-45e3-af24-a6d6dcd7315e')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-54d3dee1-de10-45e3-af24-a6d6dcd7315e button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-54d3dee1-de10-45e3-af24-a6d6dcd7315e');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 6
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "inmuebles.info()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "3RlyIODSxsL-",
        "outputId": "bb1a3b11-fecd-42c9-ef5b-1670c5688898"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "RangeIndex: 9520 entries, 0 to 9519\n",
            "Data columns (total 8 columns):\n",
            " #   Column        Non-Null Count  Dtype \n",
            "---  ------        --------------  ----- \n",
            " 0   Tipo          9520 non-null   object\n",
            " 1   Descripcion   9520 non-null   object\n",
            " 2   Habitaciones  9520 non-null   int64 \n",
            " 3   Banos         9520 non-null   int64 \n",
            " 4   Area          9520 non-null   int64 \n",
            " 5   Barrio        9520 non-null   object\n",
            " 6   UPZ           9478 non-null   object\n",
            " 7   Valor         9520 non-null   object\n",
            "dtypes: int64(3), object(5)\n",
            "memory usage: 595.1+ KB\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "inmuebles.iloc[300:305]"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 206
        },
        "id": "Ck5Y412m0c7K",
        "outputId": "fa6d9ff7-5e84-4e43-8a3b-b921c9fe3119"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "            Tipo                          Descripcion  Habitaciones  Banos  \\\n",
              "300  Apartamento      Apartamento en venta en Kennedy             2      1   \n",
              "301  Apartamento  Apartamento en venta en Chico Norte             2      2   \n",
              "302  Apartamento      Apartamento en venta en Kennedy             3      2   \n",
              "303  Apartamento      Apartamento en venta en Kennedy             3      2   \n",
              "304  Apartamento     Apartamento en venta en Cedritos             4      4   \n",
              "\n",
              "     Area       Barrio                                 UPZ          Valor  \n",
              "300    42      Kennedy                     Kennedy Central  $ 116.100.000  \n",
              "301    95  Chico Norte  CHAPINERO: Chicó Lago + El Refugio  $ 980.000.000  \n",
              "302    54      Kennedy                     Kennedy Central  $ 237.000.000  \n",
              "303    67      Kennedy                     Kennedy Central  $ 320.000.000  \n",
              "304   132     Cedritos                             Usaquén  $ 530.000.000  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-3957b610-7093-4ade-b588-a09e10e165a1\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Tipo</th>\n",
              "      <th>Descripcion</th>\n",
              "      <th>Habitaciones</th>\n",
              "      <th>Banos</th>\n",
              "      <th>Area</th>\n",
              "      <th>Barrio</th>\n",
              "      <th>UPZ</th>\n",
              "      <th>Valor</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>300</th>\n",
              "      <td>Apartamento</td>\n",
              "      <td>Apartamento en venta en Kennedy</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>42</td>\n",
              "      <td>Kennedy</td>\n",
              "      <td>Kennedy Central</td>\n",
              "      <td>$ 116.100.000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>301</th>\n",
              "      <td>Apartamento</td>\n",
              "      <td>Apartamento en venta en Chico Norte</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>95</td>\n",
              "      <td>Chico Norte</td>\n",
              "      <td>CHAPINERO: Chicó Lago + El Refugio</td>\n",
              "      <td>$ 980.000.000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>302</th>\n",
              "      <td>Apartamento</td>\n",
              "      <td>Apartamento en venta en Kennedy</td>\n",
              "      <td>3</td>\n",
              "      <td>2</td>\n",
              "      <td>54</td>\n",
              "      <td>Kennedy</td>\n",
              "      <td>Kennedy Central</td>\n",
              "      <td>$ 237.000.000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>303</th>\n",
              "      <td>Apartamento</td>\n",
              "      <td>Apartamento en venta en Kennedy</td>\n",
              "      <td>3</td>\n",
              "      <td>2</td>\n",
              "      <td>67</td>\n",
              "      <td>Kennedy</td>\n",
              "      <td>Kennedy Central</td>\n",
              "      <td>$ 320.000.000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>304</th>\n",
              "      <td>Apartamento</td>\n",
              "      <td>Apartamento en venta en Cedritos</td>\n",
              "      <td>4</td>\n",
              "      <td>4</td>\n",
              "      <td>132</td>\n",
              "      <td>Cedritos</td>\n",
              "      <td>Usaquén</td>\n",
              "      <td>$ 530.000.000</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-3957b610-7093-4ade-b588-a09e10e165a1')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-3957b610-7093-4ade-b588-a09e10e165a1 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-3957b610-7093-4ade-b588-a09e10e165a1');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 11
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "inmuebles[\"Valor\"][300]"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 35
        },
        "id": "J1grM1xW0ssz",
        "outputId": "83e203b7-eab8-4b57-d17f-daf3f89af537"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "'$ 116.100.000'"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "string"
            }
          },
          "metadata": {},
          "execution_count": 12
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "type (inmuebles[\"Valor\"][300:305])"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "SVPRtxY61DbI",
        "outputId": "93276c8e-9698-4b4b-ab3c-81d44ba8b355"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "pandas.core.series.Series"
            ]
          },
          "metadata": {},
          "execution_count": 13
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "inmuebles.Area.mean()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "sriUxQ751yKN",
        "outputId": "d5759faf-b13b-4cd3-809d-ff61439a4d1e"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "146.66470588235293"
            ]
          },
          "metadata": {},
          "execution_count": 14
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "inmuebles.sample(100)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 424
        },
        "id": "oq2N2sOr2HQI",
        "outputId": "5b5fc3ad-3c8d-4a4c-cc04-c4ad8101a888"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "             Tipo                                 Descripcion  Habitaciones  \\\n",
              "2398  Apartamento     Apartamento en venta en Nueva Autopista             1   \n",
              "2959  Apartamento            Apartamento en venta en Cedritos             3   \n",
              "476   Apartamento             Apartamento en venta en Usaquén             2   \n",
              "8549  Apartamento            Apartamento en venta en Engativa             3   \n",
              "7517         Casa                    Casa en venta en Kennedy            10   \n",
              "...           ...                                         ...           ...   \n",
              "35    Apartamento  Apartamento en venta en Zona Noroccidental             2   \n",
              "9127  Apartamento     Apartamento en venta en Chico Reservado             3   \n",
              "5266  Apartamento                Apartamento en venta en Bosa             3   \n",
              "2728  Apartamento           Apartamento en venta en El Virrey             1   \n",
              "7437  Apartamento        Apartamento en venta en Los Mártires             5   \n",
              "\n",
              "      Banos  Area              Barrio                                 UPZ  \\\n",
              "2398      2    59     Nueva Autopista                          Los Cedros   \n",
              "2959      2    95            Cedritos                             Usaquén   \n",
              "476       2    63             Usaquén                             Usaquén   \n",
              "8549      1    48            Engativa                            Engativá   \n",
              "7517      3   260             Kennedy                     Kennedy Central   \n",
              "...     ...   ...                 ...                                 ...   \n",
              "35        2    45  Zona Noroccidental  CHAPINERO: Pardo Rubio + Chapinero   \n",
              "9127      2   208     Chico Reservado  CHAPINERO: Chicó Lago + El Refugio   \n",
              "5266      2    52                Bosa                        Bosa Central   \n",
              "2728      2    41           El Virrey                           Comuneros   \n",
              "7437      4   184        Los Mártires                           La Sabana   \n",
              "\n",
              "                Valor  \n",
              "2398    $ 368.000.000  \n",
              "2959    $ 442.436.000  \n",
              "476     $ 390.000.000  \n",
              "8549    $ 260.000.000  \n",
              "7517    $ 450.000.000  \n",
              "...               ...  \n",
              "35      $ 129.000.000  \n",
              "9127  $ 1.700.000.000  \n",
              "5266    $ 155.000.000  \n",
              "2728    $ 480.000.000  \n",
              "7437    $ 560.000.000  \n",
              "\n",
              "[100 rows x 8 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-7fe8f21c-a8b1-45b6-8ddf-ef9b9b2e76d1\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Tipo</th>\n",
              "      <th>Descripcion</th>\n",
              "      <th>Habitaciones</th>\n",
              "      <th>Banos</th>\n",
              "      <th>Area</th>\n",
              "      <th>Barrio</th>\n",
              "      <th>UPZ</th>\n",
              "      <th>Valor</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>2398</th>\n",
              "      <td>Apartamento</td>\n",
              "      <td>Apartamento en venta en Nueva Autopista</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>59</td>\n",
              "      <td>Nueva Autopista</td>\n",
              "      <td>Los Cedros</td>\n",
              "      <td>$ 368.000.000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2959</th>\n",
              "      <td>Apartamento</td>\n",
              "      <td>Apartamento en venta en Cedritos</td>\n",
              "      <td>3</td>\n",
              "      <td>2</td>\n",
              "      <td>95</td>\n",
              "      <td>Cedritos</td>\n",
              "      <td>Usaquén</td>\n",
              "      <td>$ 442.436.000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>476</th>\n",
              "      <td>Apartamento</td>\n",
              "      <td>Apartamento en venta en Usaquén</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>63</td>\n",
              "      <td>Usaquén</td>\n",
              "      <td>Usaquén</td>\n",
              "      <td>$ 390.000.000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8549</th>\n",
              "      <td>Apartamento</td>\n",
              "      <td>Apartamento en venta en Engativa</td>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "      <td>48</td>\n",
              "      <td>Engativa</td>\n",
              "      <td>Engativá</td>\n",
              "      <td>$ 260.000.000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7517</th>\n",
              "      <td>Casa</td>\n",
              "      <td>Casa en venta en Kennedy</td>\n",
              "      <td>10</td>\n",
              "      <td>3</td>\n",
              "      <td>260</td>\n",
              "      <td>Kennedy</td>\n",
              "      <td>Kennedy Central</td>\n",
              "      <td>$ 450.000.000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>35</th>\n",
              "      <td>Apartamento</td>\n",
              "      <td>Apartamento en venta en Zona Noroccidental</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>45</td>\n",
              "      <td>Zona Noroccidental</td>\n",
              "      <td>CHAPINERO: Pardo Rubio + Chapinero</td>\n",
              "      <td>$ 129.000.000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9127</th>\n",
              "      <td>Apartamento</td>\n",
              "      <td>Apartamento en venta en Chico Reservado</td>\n",
              "      <td>3</td>\n",
              "      <td>2</td>\n",
              "      <td>208</td>\n",
              "      <td>Chico Reservado</td>\n",
              "      <td>CHAPINERO: Chicó Lago + El Refugio</td>\n",
              "      <td>$ 1.700.000.000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5266</th>\n",
              "      <td>Apartamento</td>\n",
              "      <td>Apartamento en venta en Bosa</td>\n",
              "      <td>3</td>\n",
              "      <td>2</td>\n",
              "      <td>52</td>\n",
              "      <td>Bosa</td>\n",
              "      <td>Bosa Central</td>\n",
              "      <td>$ 155.000.000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2728</th>\n",
              "      <td>Apartamento</td>\n",
              "      <td>Apartamento en venta en El Virrey</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>41</td>\n",
              "      <td>El Virrey</td>\n",
              "      <td>Comuneros</td>\n",
              "      <td>$ 480.000.000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7437</th>\n",
              "      <td>Apartamento</td>\n",
              "      <td>Apartamento en venta en Los Mártires</td>\n",
              "      <td>5</td>\n",
              "      <td>4</td>\n",
              "      <td>184</td>\n",
              "      <td>Los Mártires</td>\n",
              "      <td>La Sabana</td>\n",
              "      <td>$ 560.000.000</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>100 rows × 8 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-7fe8f21c-a8b1-45b6-8ddf-ef9b9b2e76d1')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-7fe8f21c-a8b1-45b6-8ddf-ef9b9b2e76d1 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-7fe8f21c-a8b1-45b6-8ddf-ef9b9b2e76d1');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 15
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "(inmuebles.Barrio == \"Chico Reservado\")"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "rLqBDZJF2d8P",
        "outputId": "3a94b01b-11ba-43fe-8b0a-dfb134440705"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0       False\n",
              "1       False\n",
              "2        True\n",
              "3       False\n",
              "4       False\n",
              "        ...  \n",
              "9515    False\n",
              "9516    False\n",
              "9517    False\n",
              "9518    False\n",
              "9519    False\n",
              "Name: Barrio, Length: 9520, dtype: bool"
            ]
          },
          "metadata": {},
          "execution_count": 16
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "sum((inmuebles.Barrio == \"Chico Reservado\"))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "QZjdYvLP2yj0",
        "outputId": "af81920a-4168-4739-e0a4-3c60a1e6ced5"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "225"
            ]
          },
          "metadata": {},
          "execution_count": 17
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "inmuebles_chico = (inmuebles.Barrio == \"Chico Reservado\")\n",
        "inmuebles_chico\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "OjUdYpsx3Gux",
        "outputId": "b7ffd903-98de-4786-9c12-29835f269f33"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0       False\n",
              "1       False\n",
              "2        True\n",
              "3       False\n",
              "4       False\n",
              "        ...  \n",
              "9515    False\n",
              "9516    False\n",
              "9517    False\n",
              "9518    False\n",
              "9519    False\n",
              "Name: Barrio, Length: 9520, dtype: bool"
            ]
          },
          "metadata": {},
          "execution_count": 18
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "inmuebles_barrio = inmuebles.Barrio.value_counts()\n",
        "inmuebles_barrio.plot.bar()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 388
        },
        "id": "gPTSmEH-5QFD",
        "outputId": "e24807c3-90aa-4e79-d574-7482aeeebbbf"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<AxesSubplot:>"
            ]
          },
          "metadata": {},
          "execution_count": 19
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "1.Promedio de área de todos los inmubles en los barrios en dataset.El top 10\n",
        " "
      ],
      "metadata": {
        "id": "Y9xYCT7P7I3R"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "promedio_area = inmuebles.groupby('Barrio').Area.mean()\n",
        "promedio_area"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "9sZcNY_p8nKU",
        "outputId": "fa4cb50d-8ebb-4de9-c249-6cbeff8e4e63"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Barrio\n",
              "Alameda                97.000000\n",
              "Alhambra              190.411765\n",
              "Andes Norte           124.857143\n",
              "Antonio Nariño        163.062500\n",
              "Barrancas              70.200000\n",
              "                         ...    \n",
              "Villa Maria           207.153846\n",
              "Villas De Granada      86.590909\n",
              "Villemar               76.888889\n",
              "Zona Franca            54.000000\n",
              "Zona Noroccidental    135.785633\n",
              "Name: Area, Length: 149, dtype: float64"
            ]
          },
          "metadata": {},
          "execution_count": 20
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "inmuebles_barrio.head(10).plot.bar()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 370
        },
        "id": "HJIDIwpz560z",
        "outputId": "4666f086-fbf1-4fb4-8c52-3a8e74276931"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<AxesSubplot:>"
            ]
          },
          "metadata": {},
          "execution_count": 21
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "2. Consultar otros datos estadisticos, conteo, mediana, valores minimos y máximo "
      ],
      "metadata": {
        "id": "itFkcRMF7ujS"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "promedio_habitaciones = inmuebles.groupby('Barrio').Habitaciones.mean()\n",
        "promedio_habitaciones"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "5OaoJ2-o81ym",
        "outputId": "68ee4b89-1a56-47eb-92eb-56dbdc9a5639"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Barrio\n",
              "Alameda               3.000000\n",
              "Alhambra              3.000000\n",
              "Andes Norte           3.000000\n",
              "Antonio Nariño        4.312500\n",
              "Barrancas             2.866667\n",
              "                        ...   \n",
              "Villa Maria           4.692308\n",
              "Villas De Granada     3.454545\n",
              "Villemar              2.944444\n",
              "Zona Franca           2.000000\n",
              "Zona Noroccidental    3.167617\n",
              "Name: Habitaciones, Length: 149, dtype: float64"
            ]
          },
          "metadata": {},
          "execution_count": 22
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "promedio_habitaciones.sort_values(ascending=False).head(10).plot.bar()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 392
        },
        "id": "t78UmsgV9AOc",
        "outputId": "f4818149-9c0e-4ec7-9291-dd8edd66bb3e"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<AxesSubplot:xlabel='Barrio'>"
            ]
          },
          "metadata": {},
          "execution_count": 23
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "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\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "**AULA 2**"
      ],
      "metadata": {
        "id": "zZgP0ITbNTmh"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "valor = inmuebles.Valor.str.split(expand=True)\n",
        "inmuebles[\"Moneda\"] = valor [0]\n",
        "inmuebles[\"Precio\"] = valor [1]\n",
        "inmuebles.sample(3)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 187
        },
        "id": "aA25C28I7sTl",
        "outputId": "90b67e6c-a605-4592-9478-4447df28dc99"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "             Tipo                          Descripcion  Habitaciones  Banos  \\\n",
              "9154         Casa          Casa en venta en Bogotá D.C             4      2   \n",
              "5236         Casa           Casa en venta en Santa Ana             3      4   \n",
              "9034  Apartamento  Apartamento en venta en Los Rosales             5      5   \n",
              "\n",
              "      Area       Barrio                                 UPZ            Valor  \\\n",
              "9154   153   Bogotá D.C           Ciudad Salitre Occidental    $ 470.000.000   \n",
              "5236   134    Santa Ana                             Usaquén  $ 1.200.000.000   \n",
              "9034   350  Los Rosales  CHAPINERO: Chicó Lago + El Refugio  $ 2.400.000.000   \n",
              "\n",
              "     Moneda         Precio  \n",
              "9154      $    470.000.000  \n",
              "5236      $  1.200.000.000  \n",
              "9034      $  2.400.000.000  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-f983363a-b876-491e-b58a-06def0913946\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Tipo</th>\n",
              "      <th>Descripcion</th>\n",
              "      <th>Habitaciones</th>\n",
              "      <th>Banos</th>\n",
              "      <th>Area</th>\n",
              "      <th>Barrio</th>\n",
              "      <th>UPZ</th>\n",
              "      <th>Valor</th>\n",
              "      <th>Moneda</th>\n",
              "      <th>Precio</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>9154</th>\n",
              "      <td>Casa</td>\n",
              "      <td>Casa en venta en Bogotá D.C</td>\n",
              "      <td>4</td>\n",
              "      <td>2</td>\n",
              "      <td>153</td>\n",
              "      <td>Bogotá D.C</td>\n",
              "      <td>Ciudad Salitre Occidental</td>\n",
              "      <td>$ 470.000.000</td>\n",
              "      <td>$</td>\n",
              "      <td>470.000.000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5236</th>\n",
              "      <td>Casa</td>\n",
              "      <td>Casa en venta en Santa Ana</td>\n",
              "      <td>3</td>\n",
              "      <td>4</td>\n",
              "      <td>134</td>\n",
              "      <td>Santa Ana</td>\n",
              "      <td>Usaquén</td>\n",
              "      <td>$ 1.200.000.000</td>\n",
              "      <td>$</td>\n",
              "      <td>1.200.000.000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9034</th>\n",
              "      <td>Apartamento</td>\n",
              "      <td>Apartamento en venta en Los Rosales</td>\n",
              "      <td>5</td>\n",
              "      <td>5</td>\n",
              "      <td>350</td>\n",
              "      <td>Los Rosales</td>\n",
              "      <td>CHAPINERO: Chicó Lago + El Refugio</td>\n",
              "      <td>$ 2.400.000.000</td>\n",
              "      <td>$</td>\n",
              "      <td>2.400.000.000</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f983363a-b876-491e-b58a-06def0913946')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-f983363a-b876-491e-b58a-06def0913946 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-f983363a-b876-491e-b58a-06def0913946');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 28
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "inmuebles.info()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "9eHj9dLYmzmt",
        "outputId": "f40f176d-d0ec-4e3f-d9ba-0c4a0b19235a"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "RangeIndex: 9520 entries, 0 to 9519\n",
            "Data columns (total 10 columns):\n",
            " #   Column        Non-Null Count  Dtype \n",
            "---  ------        --------------  ----- \n",
            " 0   Tipo          9520 non-null   object\n",
            " 1   Descripcion   9520 non-null   object\n",
            " 2   Habitaciones  9520 non-null   int64 \n",
            " 3   Banos         9520 non-null   int64 \n",
            " 4   Area          9520 non-null   int64 \n",
            " 5   Barrio        9520 non-null   object\n",
            " 6   UPZ           9478 non-null   object\n",
            " 7   Valor         9520 non-null   object\n",
            " 8   Moneda        9520 non-null   object\n",
            " 9   Precio        9520 non-null   object\n",
            "dtypes: int64(3), object(7)\n",
            "memory usage: 743.9+ KB\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "inmuebles[\"Precio\"] = inmuebles[\"Precio\"].str.replace(\".\",\"\", regex=True)"
      ],
      "metadata": {
        "id": "zCTOKy2SndGH"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "inmuebles[[\"Precio\",\"Barrio\"]]"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 424
        },
        "id": "Dx7U7MTCoj_D",
        "outputId": "66ea6038-9c42-400f-8d30-9e486f8fd994"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "          Precio                  Barrio\n",
              "0      360000000      Zona Noroccidental\n",
              "1      670000000                Castilla\n",
              "2     1120000000         Chico Reservado\n",
              "3      890000000                 Usaquén\n",
              "4      970000000             Bella Suiza\n",
              "...          ...                     ...\n",
              "9515   290000000                 Kennedy\n",
              "9516   670000000  Parque Central Bavaria\n",
              "9517   900000000                Restrepo\n",
              "9518   335000000                Engativa\n",
              "9519   144990000                 Tintala\n",
              "\n",
              "[9520 rows x 2 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-53f48e81-9965-4237-807e-4de9abf54c13\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Precio</th>\n",
              "      <th>Barrio</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>360000000</td>\n",
              "      <td>Zona Noroccidental</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>670000000</td>\n",
              "      <td>Castilla</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>1120000000</td>\n",
              "      <td>Chico Reservado</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>890000000</td>\n",
              "      <td>Usaquén</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>970000000</td>\n",
              "      <td>Bella Suiza</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9515</th>\n",
              "      <td>290000000</td>\n",
              "      <td>Kennedy</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9516</th>\n",
              "      <td>670000000</td>\n",
              "      <td>Parque Central Bavaria</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9517</th>\n",
              "      <td>900000000</td>\n",
              "      <td>Restrepo</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9518</th>\n",
              "      <td>335000000</td>\n",
              "      <td>Engativa</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9519</th>\n",
              "      <td>144990000</td>\n",
              "      <td>Tintala</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>9520 rows × 2 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-53f48e81-9965-4237-807e-4de9abf54c13')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-53f48e81-9965-4237-807e-4de9abf54c13 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-53f48e81-9965-4237-807e-4de9abf54c13');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 32
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "inmuebles.info()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "KAsqFmU9pDkU",
        "outputId": "7fd27db6-0ab7-4249-d1ec-50f33186c404"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "RangeIndex: 9520 entries, 0 to 9519\n",
            "Data columns (total 10 columns):\n",
            " #   Column        Non-Null Count  Dtype \n",
            "---  ------        --------------  ----- \n",
            " 0   Tipo          9520 non-null   object\n",
            " 1   Descripcion   9520 non-null   object\n",
            " 2   Habitaciones  9520 non-null   int64 \n",
            " 3   Banos         9520 non-null   int64 \n",
            " 4   Area          9520 non-null   int64 \n",
            " 5   Barrio        9520 non-null   object\n",
            " 6   UPZ           9478 non-null   object\n",
            " 7   Valor         9520 non-null   object\n",
            " 8   Moneda        9520 non-null   object\n",
            " 9   Precio        9520 non-null   object\n",
            "dtypes: int64(3), object(7)\n",
            "memory usage: 743.9+ KB\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Transformar \"tipo de dato\" a un \"tipo de dato numerico\"\n",
        "Lo que se hace de un String a un tipo de dato numerico se tranforma a float\n"
      ],
      "metadata": {
        "id": "N9vqf37jpOEn"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "inmuebles [\"Precio_Millon\"] = inmuebles.Precio.astype(\"float\")/ 1000000\n",
        "inmuebles.info()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "KMi0zQ55pDmZ",
        "outputId": "4545b971-d300-478a-84cd-89598a96fdc3"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "RangeIndex: 9520 entries, 0 to 9519\n",
            "Data columns (total 11 columns):\n",
            " #   Column         Non-Null Count  Dtype  \n",
            "---  ------         --------------  -----  \n",
            " 0   Tipo           9520 non-null   object \n",
            " 1   Descripcion    9520 non-null   object \n",
            " 2   Habitaciones   9520 non-null   int64  \n",
            " 3   Banos          9520 non-null   int64  \n",
            " 4   Area           9520 non-null   int64  \n",
            " 5   Barrio         9520 non-null   object \n",
            " 6   UPZ            9478 non-null   object \n",
            " 7   Valor          9520 non-null   object \n",
            " 8   Moneda         9520 non-null   object \n",
            " 9   Precio         9520 non-null   object \n",
            " 10  Precio_Millon  9520 non-null   float64\n",
            "dtypes: float64(1), int64(3), object(7)\n",
            "memory usage: 818.2+ KB\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "inmuebles.describe()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 300
        },
        "id": "Kvl7WsC3qJkR",
        "outputId": "3529086d-a347-42c4-9343-0288593b23d4"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "       Habitaciones        Banos           Area  Precio_Millon\n",
              "count   9520.000000  9520.000000    9520.000000    9520.000000\n",
              "mean       3.072479     2.447899     146.664706     602.062354\n",
              "std        2.049856     1.255314    1731.379622     704.602062\n",
              "min        1.000000     0.000000       2.000000      60.000000\n",
              "25%        2.000000     2.000000      57.000000     250.000000\n",
              "50%        3.000000     2.000000      80.000000     409.182500\n",
              "75%        3.000000     3.000000     135.000000     680.000000\n",
              "max      110.000000     9.000000  166243.000000   16000.000000"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-cedd9119-9233-40f5-935d-cc23e880bdac\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Habitaciones</th>\n",
              "      <th>Banos</th>\n",
              "      <th>Area</th>\n",
              "      <th>Precio_Millon</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>count</th>\n",
              "      <td>9520.000000</td>\n",
              "      <td>9520.000000</td>\n",
              "      <td>9520.000000</td>\n",
              "      <td>9520.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>mean</th>\n",
              "      <td>3.072479</td>\n",
              "      <td>2.447899</td>\n",
              "      <td>146.664706</td>\n",
              "      <td>602.062354</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>std</th>\n",
              "      <td>2.049856</td>\n",
              "      <td>1.255314</td>\n",
              "      <td>1731.379622</td>\n",
              "      <td>704.602062</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>min</th>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>2.000000</td>\n",
              "      <td>60.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25%</th>\n",
              "      <td>2.000000</td>\n",
              "      <td>2.000000</td>\n",
              "      <td>57.000000</td>\n",
              "      <td>250.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>50%</th>\n",
              "      <td>3.000000</td>\n",
              "      <td>2.000000</td>\n",
              "      <td>80.000000</td>\n",
              "      <td>409.182500</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>75%</th>\n",
              "      <td>3.000000</td>\n",
              "      <td>3.000000</td>\n",
              "      <td>135.000000</td>\n",
              "      <td>680.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>max</th>\n",
              "      <td>110.000000</td>\n",
              "      <td>9.000000</td>\n",
              "      <td>166243.000000</td>\n",
              "      <td>16000.000000</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-cedd9119-9233-40f5-935d-cc23e880bdac')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-cedd9119-9233-40f5-935d-cc23e880bdac button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-cedd9119-9233-40f5-935d-cc23e880bdac');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 35
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Eliminar posiones decimales"
      ],
      "metadata": {
        "id": "yEm0HnPkt7YZ"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "pd.set_option(\"display.precision\", 2)\n",
        "pd.set_option(\"display.float_format\", lambda x: \"%.2f\" % x)\n",
        "inmuebles.describe()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 300
        },
        "id": "Dti8BRBAt_QJ",
        "outputId": "be3f45ca-4df7-438c-af07-49c1d4f584c6"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "       Habitaciones   Banos      Area  Precio_Millon\n",
              "count       9520.00 9520.00   9520.00        9520.00\n",
              "mean           3.07    2.45    146.66         602.06\n",
              "std            2.05    1.26   1731.38         704.60\n",
              "min            1.00    0.00      2.00          60.00\n",
              "25%            2.00    2.00     57.00         250.00\n",
              "50%            3.00    2.00     80.00         409.18\n",
              "75%            3.00    3.00    135.00         680.00\n",
              "max          110.00    9.00 166243.00       16000.00"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-25e70acf-e942-4434-9e85-cf5b88ca682f\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Habitaciones</th>\n",
              "      <th>Banos</th>\n",
              "      <th>Area</th>\n",
              "      <th>Precio_Millon</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>count</th>\n",
              "      <td>9520.00</td>\n",
              "      <td>9520.00</td>\n",
              "      <td>9520.00</td>\n",
              "      <td>9520.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>mean</th>\n",
              "      <td>3.07</td>\n",
              "      <td>2.45</td>\n",
              "      <td>146.66</td>\n",
              "      <td>602.06</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>std</th>\n",
              "      <td>2.05</td>\n",
              "      <td>1.26</td>\n",
              "      <td>1731.38</td>\n",
              "      <td>704.60</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>min</th>\n",
              "      <td>1.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>60.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25%</th>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>57.00</td>\n",
              "      <td>250.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>50%</th>\n",
              "      <td>3.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>80.00</td>\n",
              "      <td>409.18</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>75%</th>\n",
              "      <td>3.00</td>\n",
              "      <td>3.00</td>\n",
              "      <td>135.00</td>\n",
              "      <td>680.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>max</th>\n",
              "      <td>110.00</td>\n",
              "      <td>9.00</td>\n",
              "      <td>166243.00</td>\n",
              "      <td>16000.00</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-25e70acf-e942-4434-9e85-cf5b88ca682f')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-25e70acf-e942-4434-9e85-cf5b88ca682f button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-25e70acf-e942-4434-9e85-cf5b88ca682f');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 36
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "inmuebles.loc [inmuebles.Habitaciones == 110]"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 81
        },
        "id": "cvX1uXaevgp_",
        "outputId": "3a8c0db2-221a-45d7-db6c-0891eba1e1d3"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "     Tipo                Descripcion  Habitaciones  Banos  Area    Barrio  \\\n",
              "897  Casa  Casa en venta en La Uribe           110      2   110  La Uribe   \n",
              "\n",
              "         UPZ          Valor Moneda     Precio  Precio_Millon  \n",
              "897  Usaquén  $ 480.000.000      $  480000000         480.00  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-4669e8e7-07e2-427c-96a3-852ff5b8dad4\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Tipo</th>\n",
              "      <th>Descripcion</th>\n",
              "      <th>Habitaciones</th>\n",
              "      <th>Banos</th>\n",
              "      <th>Area</th>\n",
              "      <th>Barrio</th>\n",
              "      <th>UPZ</th>\n",
              "      <th>Valor</th>\n",
              "      <th>Moneda</th>\n",
              "      <th>Precio</th>\n",
              "      <th>Precio_Millon</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>897</th>\n",
              "      <td>Casa</td>\n",
              "      <td>Casa en venta en La Uribe</td>\n",
              "      <td>110</td>\n",
              "      <td>2</td>\n",
              "      <td>110</td>\n",
              "      <td>La Uribe</td>\n",
              "      <td>Usaquén</td>\n",
              "      <td>$ 480.000.000</td>\n",
              "      <td>$</td>\n",
              "      <td>480000000</td>\n",
              "      <td>480.00</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-4669e8e7-07e2-427c-96a3-852ff5b8dad4')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-4669e8e7-07e2-427c-96a3-852ff5b8dad4 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-4669e8e7-07e2-427c-96a3-852ff5b8dad4');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 37
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "inmuebles[\"Precio_Millon\"].plot.hist(bins=10)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 282
        },
        "id": "u9wbLibTw8EW",
        "outputId": "fb84e240-f933-4e37-cc85-be242417d014"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<AxesSubplot:ylabel='Frequency'>"
            ]
          },
          "metadata": {},
          "execution_count": 38
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "iVBORw0KGgoAAAANSUhEUgAAAYsAAAD4CAYAAAAdIcpQAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjUuMywgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy/NK7nSAAAACXBIWXMAAAsTAAALEwEAmpwYAAAT9klEQVR4nO3df7RlZX3f8fdHRn4mYWZkQsgMzQwJ0WIbKxkRFzVNwACCEdImlizTTAwNbaVWY5oImhWsCWuJSYPSxB9UyAJDBEQiFE1ciMbV/hFgAEV+OOHKD5kRZQSERI04+u0f5xnmMNzLc2Y4595zue/XWmfdZz9777O/95lz7mf2j7NPqgpJkp7Ocxa6AEnS9DMsJEldhoUkqcuwkCR1GRaSpK5lC13AJBxwwAG1du3ahS5DkhaVm2666etVtWq2ec/KsFi7di0bN25c6DIkaVFJct9c8zwMJUnqMiwkSV2GhSSpy7CQJHUZFpKkLsNCktRlWEiSugwLSVKXYSFJ6npWfoL7mVp7xscXZLv3vvPEBdmuJPW4ZyFJ6jIsJEldhoUkqcuwkCR1GRaSpC7DQpLUZVhIkroMC0lSl2EhSeoyLCRJXYaFJKnLsJAkdRkWkqQuw0KS1GVYSJK6DAtJUpdhIUnqMiwkSV2GhSSpa6JhkeS3ktye5LYkH06yd5J1Sa5PMpPksiR7tmX3atMzbf7aoec5s/VvSnLcJGuWJD3VxMIiyWrgvwHrq+pfAHsApwDnAOdW1U8AjwCntlVOBR5p/ee25UhyWFvvhcDxwHuT7DGpuiVJTzXpw1DLgH2SLAP2BR4AjgauaPMvAk5u7ZPaNG3+MUnS+i+tqu9U1T3ADHDEhOuWJA2ZWFhU1Rbgj4EvMwiJR4GbgG9U1ba22GZgdWuvBu5v625ryz9vuH+WdZ6Q5LQkG5Ns3Lp16/h/IUlawiZ5GGoFg72CdcCPAvsxOIw0EVV1flWtr6r1q1atmtRmJGlJmuRhqFcA91TV1qr6LnAlcBSwvB2WAlgDbGntLcDBAG3+/sBDw/2zrCNJmgeTDIsvA0cm2bedezgGuAP4DPBLbZkNwFWtfXWbps3/dFVV6z+lXS21DjgUuGGCdUuSdrKsv8juqarrk1wB3AxsA24Bzgc+Dlya5A9b3wVtlQuADyWZAR5mcAUUVXV7kssZBM024PSq+t6k6pYkPdXEwgKgqs4Cztqp+25muZqpqv4J+OU5nuds4OyxFyhJGomf4JYkdRkWkqQuw0KS1GVYSJK6DAtJUpdhIUnqMiwkSV2GhSSpy7CQJHUZFpKkLsNCktRlWEiSugwLSVKXYSFJ6jIsJEldhoUkqcuwkCR1GRaSpC7DQpLUZVhIkroMC0lSl2EhSeoyLCRJXYaFJKnLsJAkdRkWkqQuw0KS1GVYSJK6DAtJUpdhIUnqMiwkSV2GhSSpy7CQJHUZFpKkLsNCktRlWEiSugwLSVLXRMMiyfIkVyT5YpI7k7wsycok1ya5q/1c0ZZNkvOSzCS5NcnhQ8+zoS1/V5INk6xZkvRUk96zeA/wN1X1AuBFwJ3AGcB1VXUocF2bBnglcGh7nAa8DyDJSuAs4KXAEcBZ2wNGkjQ/JhYWSfYHfga4AKCqHq+qbwAnARe1xS4CTm7tk4CLa+DvgOVJDgKOA66tqoer6hHgWuD4SdUtSXqqSe5ZrAO2An+e5JYkH0yyH3BgVT3QlvkqcGBrrwbuH1p/c+ubq/9JkpyWZGOSjVu3bh3zryJJS9skw2IZcDjwvqp6MfBNdhxyAqCqCqhxbKyqzq+q9VW1ftWqVeN4SklSM8mw2Axsrqrr2/QVDMLja+3wEu3ng23+FuDgofXXtL65+iVJ82RiYVFVXwXuT/L81nUMcAdwNbD9iqYNwFWtfTXwa+2qqCOBR9vhqk8CxyZZ0U5sH9v6JEnzZNmEn/8NwCVJ9gTuBl7HIKAuT3IqcB/wmrbsJ4ATgBngW21ZqurhJH8A3NiWe0dVPTzhuiVJQyYaFlX1OWD9LLOOmWXZAk6f43kuBC4ca3GSpJGNdBgqyb+cdCGSpOk16jmL9ya5Icnr2+cnJElLyEhhUVUvB17L4Kqkm5L8ZZKfn2hlkqSpMfLVUFV1F/B7wFuAfwOc1+759G8nVZwkaTqMes7ip5Kcy+DeTkcDv1BV/7y1z51gfZKkKTDq1VD/C/gg8Naq+vb2zqr6SpLfm0hlkqSpMWpYnAh8u6q+B5DkOcDeVfWtqvrQxKqTJE2FUc9ZfArYZ2h639YnSVoCRg2LvavqH7dPtPa+kylJkjRtRg2Lb+70zXU/DXz7aZaXJD2LjHrO4k3AR5J8BQjwI8C/n1RRkqTpMlJYVNWNSV4AbL+D7Kaq+u7kypIkTZNduZHgS4C1bZ3Dk1BVF0+kKknSVBkpLJJ8CPhx4HPA91p3AYaFJC0Bo+5ZrAcOa7cRlyQtMaNeDXUbg5PakqQlaNQ9iwOAO5LcAHxne2dVvXoiVUmSpsqoYfH2SRYhSZpuo146+9kkPwYcWlWfSrIvsMdkS5MkTYtRb1H+m8AVwAda12rgYxOqSZI0ZUY9wX06cBTwGDzxRUg/PKmiJEnTZdSw+E5VPb59IskyBp+zkCQtAaOGxWeTvBXYp3339keA/zO5siRJ02TUsDgD2Ap8AfhPwCcYfB+3JGkJGPVqqO8D/7s9JElLzKj3hrqHWc5RVNUhY69IkjR1duXeUNvtDfwysHL85UiSptFI5yyq6qGhx5aqejdw4mRLkyRNi1EPQx0+NPkcBnsau/JdGJKkRWzUP/j/c6i9DbgXeM3Yq5EkTaVRr4b6uUkXIkmaXqMehnrz082vqj8ZTzmSpGm0K1dDvQS4uk3/AnADcNckipIkTZdRw2INcHhV/QNAkrcDH6+qX51UYZKk6THq7T4OBB4fmn689UmSloBR9ywuBm5I8ldt+mTgoolUJEmaOqNeDXV2kr8GXt66XldVt0yuLEnSNBn1MBTAvsBjVfUeYHOSdaOslGSPJLckuaZNr0tyfZKZJJcl2bP179WmZ9r8tUPPcWbr35TkuF2oWZI0BqN+repZwFuAM1vXc4G/GHEbbwTuHJo+Bzi3qn4CeAQ4tfWfCjzS+s9ty5HkMOAU4IXA8cB7k/j935I0j0bds/hF4NXANwGq6ivAD/ZWSrKGwT2kPtimAxzN4Pu8YXDe4+TWPokd50GuAI5py58EXFpV36mqe4AZ4IgR65YkjcGoYfF4VRXtNuVJ9htxvXcDvwt8v00/D/hGVW1r05uB1a29GrgfoM1/tC3/RP8s6zwhyWlJNibZuHXr1hHLkySNYtSwuDzJB4DlSX4T+BSdL0JK8irgwaq66RnWOJKqOr+q1lfV+lWrVs3HJiVpyeheDdUOBV0GvAB4DHg+8PtVdW1n1aOAVyc5gcF3YPwQ8B4GgbOs7T2sAba05bcABzM4eb4M2B94aKh/u+F1JEnzoLtn0Q4/faKqrq2q36mq/z5CUFBVZ1bVmqpay+AE9aer6rXAZ4BfaottAK5q7avbNG3+p9u2rwZOaVdLrQMOZXCrEUnSPBn1MNTNSV4ypm2+BXhzkhkG5yQuaP0XAM9r/W8GzgCoqtuBy4E7gL8BTq+q742pFknSCEb9BPdLgV9Nci+DK6LCYKfjp0ZZuar+Fvjb1r6bWa5mqqp/YvB1rbOtfzZw9oi1SpLG7GnDIsk/q6ovA34QTpKWsN6exccY3G32viQfrap/Nw81SZKmTO+cRYbah0yyEEnS9OqFRc3RliQtIb3DUC9K8hiDPYx9Wht2nOD+oYlWJ0maCk8bFlXlDfskSbt0i3JJ0hJlWEiSugwLSVKXYSFJ6jIsJEldhoUkqcuwkCR1GRaSpC7DQpLUZVhIkroMC0lSl2EhSeoyLCRJXYaFJKnLsJAkdRkWkqQuw0KS1GVYSJK6DAtJUpdhIUnqMiwkSV2GhSSpy7CQJHUZFpKkLsNCktRlWEiSugwLSVKXYSFJ6jIsJEldhoUkqcuwkCR1TSwskhyc5DNJ7khye5I3tv6VSa5Nclf7uaL1J8l5SWaS3Jrk8KHn2tCWvyvJhknVLEma3ST3LLYBv11VhwFHAqcnOQw4A7iuqg4FrmvTAK8EDm2P04D3wSBcgLOAlwJHAGdtDxhJ0vyYWFhU1QNVdXNr/wNwJ7AaOAm4qC12EXBya58EXFwDfwcsT3IQcBxwbVU9XFWPANcCx0+qbknSU83LOYska4EXA9cDB1bVA23WV4EDW3s1cP/Qaptb31z9O2/jtCQbk2zcunXreH8BSVriJh4WSX4A+Cjwpqp6bHheVRVQ49hOVZ1fVeurav2qVavG8ZSSpGaiYZHkuQyC4pKqurJ1f60dXqL9fLD1bwEOHlp9Teubq1+SNE8meTVUgAuAO6vqT4ZmXQ1sv6JpA3DVUP+vtauijgQebYerPgkcm2RFO7F9bOuTJM2TZRN87qOA/wB8IcnnWt9bgXcClyc5FbgPeE2b9wngBGAG+BbwOoCqejjJHwA3tuXeUVUPT7BuSdJOJhYWVfX/gMwx+5hZli/g9Dme60LgwvFVJ0naFX6CW5LUZVhIkroMC0lSl2EhSeoyLCRJXYaFJKnLsJAkdRkWkqQuw0KS1GVYSJK6DAtJUpdhIUnqMiwkSV2GhSSpy7CQJHUZFpKkLsNCktRlWEiSugwLSVKXYSFJ6jIsJEldhoUkqcuwkCR1GRaSpC7DQpLUZVhIkroMC0lSl2EhSeoyLCRJXYaFJKnLsJAkdS1b6AK0w9ozPr4g2733nScuyHYlLR7uWUiSugwLSVKXYSFJ6jIsJEldhoUkqWvRhEWS45NsSjKT5IyFrkeSlpJFcelskj2APwN+HtgM3Jjk6qq6Y2Ere3ZYqEt2wct2pcViUYQFcAQwU1V3AyS5FDgJMCwWOT9bIi0OiyUsVgP3D01vBl46vECS04DT2uQ/Jtm0G9s5APj6blU4edNa26KsK+fMYyVPtijHa4FNa23Pxrp+bK4ZiyUsuqrqfOD8Z/IcSTZW1foxlTRW01qbde0a69p101rbUqtrsZzg3gIcPDS9pvVJkubBYgmLG4FDk6xLsidwCnD1AtckSUvGojgMVVXbkvxX4JPAHsCFVXX7BDb1jA5jTdi01mZdu8a6dt201rak6kpVTeJ5JUnPIovlMJQkaQEZFpKkLsOime/biSQ5OMlnktyR5PYkb2z9K5Ncm+Su9nNF60+S81p9tyY5fOi5NrTl70qyYUz17ZHkliTXtOl1Sa5v27+sXWhAkr3a9Eybv3boOc5s/ZuSHDeGmpYnuSLJF5PcmeRl0zBeSX6r/RveluTDSfZeqPFKcmGSB5PcNtQ3tjFK8tNJvtDWOS9JnkFdf9T+LW9N8ldJlvfGYq736VzjvTt1Dc377SSV5IBpGK/W/4Y2Zrcnede8jldVLfkHg5PmXwIOAfYEPg8cNuFtHgQc3to/CPw9cBjwLuCM1n8GcE5rnwD8NRDgSOD61r8SuLv9XNHaK8ZQ35uBvwSuadOXA6e09vuB/9Larwfe39qnAJe19mFtHPcC1rXx3eMZ1nQR8B9be09g+UKPF4MPjN4D7DM0Tr++UOMF/AxwOHDbUN/Yxgi4oS2btu4rn0FdxwLLWvucobpmHQue5n0613jvTl2t/2AGF9TcBxwwJeP1c8CngL3a9A/P53hN7I/hYnoALwM+OTR9JnDmPNdwFYN7X20CDmp9BwGbWvsDwK8MLb+pzf8V4AND/U9abjdrWQNcBxwNXNNe6F8femM/MV7tDfWy1l7WlsvOYzi83G7WtD+DP8rZqX9Bx4sddxdY2X7/a4DjFnK8gLU7/ZEZyxi1eV8c6n/Scrta107zfhG4pLVnHQvmeJ8+3etzd+sCrgBeBNzLjrBY0PFi8Af+FbMsNy/j5WGogdluJ7J6vjbeDkW8GLgeOLCqHmizvgoc2KlxErW/G/hd4Ptt+nnAN6pq2yzbeGL7bf6jbflx17UO2Ar8eQaHxz6YZD8WeLyqagvwx8CXgQcY/P43sfDjNWxcY7S6tSdR428w+J/37tT1dK/PXZbkJGBLVX1+p1kLPV4/Cby8HT76bJKX7GZduzVehsUCS/IDwEeBN1XVY8PzahD783ptc5JXAQ9W1U3zud0RLGOwW/6+qnox8E0Gh1SesEDjtYLBTS3XAT8K7AccP5817IqFGKOeJG8DtgGXTEEt+wJvBX5/oWuZxTIGe7BHAr8DXD7qOZBxMCwGFuR2IkmeyyAoLqmqK1v315Ic1OYfBDzYqXHctR8FvDrJvcClDA5FvQdYnmT7hziHt/HE9tv8/YGHJlDXZmBzVV3fpq9gEB4LPV6vAO6pqq1V9V3gSgZjuNDjNWxcY7SltcdWY5JfB14FvLYF2e7U9RBzj/eu+nEGwf/59h5YA9yc5Ed2o65xj9dm4MoauIHBnv8Bu1HX7o3X7hwTfbY9GCT23QxeJNtPBL1wwtsMcDHw7p36/4gnn4x8V2ufyJNPrt3Q+lcyOJa/oj3uAVaOqcafZccJ7o/w5BNir2/t03nyCdvLW/uFPPmk29088xPc/xd4fmu/vY3Vgo4Xg7sf3w7s27Z1EfCGhRwvnnqse2xjxFNP2J7wDOo6nsHXDKzaablZx4KneZ/ONd67U9dO8+5lxzmLhR6v/wy8o7V/ksEhpszXeE3sj+FiezC40uHvGVw98LZ52N6/ZnA44Fbgc+1xAoPjidcBdzG48mH7iy4MvgDqS8AXgPVDz/UbwEx7vG6MNf4sO8LikPbCn2kvtO1XZOzdpmfa/EOG1n9bq3cTI14F0qnnXwEb25h9rL0xF3y8gP8BfBG4DfhQe9MuyHgBH2Zw7uS7DP4neuo4xwhY337PLwF/yk4XHOxiXTMM/uBtf/2/vzcWzPE+nWu8d6eunebfy46wWOjx2hP4i/Z8NwNHz+d4ebsPSVKX5ywkSV2GhSSpy7CQJHUZFpKkLsNCktRlWEiSugwLSVLX/wd/+yLAgDBS5gAAAABJRU5ErkJggg==\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Grafica más detalladas "
      ],
      "metadata": {
        "id": "z-uoieUT0q2Z"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "import matplotlib.pyplot as plt\n",
        "import seaborn as sns\n",
        "\n",
        "plt.figure(figsize=(10,8))\n",
        "sns.histplot(data=inmuebles, x=\"Precio_Millon\")\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 498
        },
        "id": "EUD0anMUzCHw",
        "outputId": "39f05881-e43e-420c-d6a9-bb109033551f"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 720x576 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Nombre de la grafica y limite de grafica maximo"
      ],
      "metadata": {
        "id": "f9cr6qvl1IH3"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "import matplotlib.pyplot as plt\n",
        "import seaborn as sns\n",
        "\n",
        "plt.figure(figsize=(10,8))\n",
        "grafica = sns.histplot(data=inmuebles, x=\"Precio_Millon\")\n",
        "grafica.set_title(\"Distribucion de valores de los inmuebles en Bogota\")\n",
        "plt.xlim((50,1000))\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 514
        },
        "id": "69Xl6pGb04m5",
        "outputId": "fc9deb4e-ef58-4445-900e-1cffecdf1e7a"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 720x576 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Grafica a través de una curva, para ver el comportamiento \"curva de densidad\""
      ],
      "metadata": {
        "id": "Rxio_QEa2qi0"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "import matplotlib.pyplot as plt\n",
        "import seaborn as sns\n",
        "\n",
        "plt.figure(figsize=(10,8))\n",
        "grafica = sns.histplot(data=inmuebles, x=\"Precio_Millon\", kde=True)\n",
        "grafica.set_title(\"Distribucion de valores de los inmuebles en Bogota\")\n",
        "plt.xlim((50,1000))\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 514
        },
        "id": "o6XWV8MA2onZ",
        "outputId": "eae0104b-b22c-4507-db10-ca17eb611b3b"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 720x576 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Grfica de tipos de imuebles con (hue= \"Tipo\")"
      ],
      "metadata": {
        "id": "DCHhyLGm4fj6"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "import matplotlib.pyplot as plt\n",
        "import seaborn as sns\n",
        "\n",
        "plt.figure(figsize=(10,8))\n",
        "grafica = sns.histplot(data=inmuebles, x=\"Precio_Millon\", kde=True,hue=\"Tipo\")\n",
        "grafica.set_title(\"Distribucion de valores de los inmuebles en Bogota\")\n",
        "plt.xlim((50,1000))\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 514
        },
        "id": "Sdp8ose17_qv",
        "outputId": "e593fff2-27b7-4f17-d905-a393cf291fb2"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 720x576 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Desafio 2\n",
        "Mejorar los histogrmas de valores, seleccionar 3 tipos de inmuebles (mejorar las grificas: titulo, coclusion)"
      ],
      "metadata": {
        "id": "eX0CZYV89Oxj"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "tipos_seleccionados = inmuebles.Tipo = Casa\n",
        "                      inmuebles.Tipo = Oficina/Consultorio\n",
        "                      inmuebles.Tipo = Local"
      ],
      "metadata": {
        "id": "NayT8jwRBsIa"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "import numpy as np\n",
        "import matplotlib.pyplot as plt\n",
        "from matplotlib.collections import LineCollection\n",
        "from matplotlib.colors import ListedColormap, BoundaryNorm\n",
        "\n",
        "plt.figure(figsize=(10,6))\n",
        "\n",
        "grafica = sns.histplot(data = inmuebles[tipos_seleccionados], x = 'Precio_Millon',linewidth = 2, kde = True, \n",
        "hue = 'Tipo')\n",
        "\n",
        "grafica.set_title(\"Distribución de Valores de los inmuebles en Bogotá\")\n",
        "\n",
        "grafica.set_xlabel(\"Precio en millones\", fontdict = caract_titulo)\n",
        "grafica.set_ylabel(\"Cantidad\", fontdict = caract_titulo)\n",
        "\n",
        "plt.xlim((50,1100))\n",
        "\n",
        "plt.show()\n",
        "\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 407
        },
        "id": "JxOFBpgrAu86",
        "outputId": "1b4d23cb-3bbe-44e3-80cf-ad5dc5e733f5"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 720x432 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "El precio por metro por barrio con grafica"
      ],
      "metadata": {
        "id": "bLGH0W7p9_Ka"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "import matplotlib.pyplot as plt\n",
        "import numpy as np\n",
        "\n",
        "plt.style.use('_mpl-gallery')\n",
        "\n",
        "# make data\n",
        "np.random.seed(3)\n",
        "x = 0.5 + np.arange(8)\n",
        "y = np.random.uniform(2, 7, len(x))\n",
        "\n",
        "# plot\n",
        "fig, ax = plt.subplots()\n",
        "\n",
        "ax.stem(x, y)\n",
        "\n",
        "ax.set(xlim=(0, 8), xticks=np.arange(1, 8),\n",
        "       ylim=(0, 8), yticks=np.arange(1, 8))\n",
        "\n",
        "plt.show()"
      ],
      "metadata": {
        "id": "JtkxRV46ttrP"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "import matplotlib.pyplot as plt\n",
        "import seaborn as sns\n",
        "\n",
        "inmuebles['preciom2'] = inmuebles.Precio_Millon / inmuebles.Area\n",
        "\n",
        "promedio_precio_m2_barrio = (inmuebles.groupby('Barrio')['preciom2']\n",
        "                                 .mean()\n",
        "                                 .reset_index()\n",
        "                                 .sort_values('preciom2', ascending=False))\n",
        "\n",
        "promedio_precio_m2_barrio.head(20).plot.bar('Barrio', 'preciom2');"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 360
        },
        "id": "H68b9T6a-USS",
        "outputId": "6a8b6d41-023e-4097-cc5f-59f5b150ebab"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Gracias los dos gráficos generados es posible concluir que el barrio más caro es El Virrey ubicado en la zona norte de Bogotá, pues sus inmuebles en venta tienen en promedio un costo de 10 millones de Pesos Colombianos por metro cuadrado.\n",
        "\n",
        "Por otro lado, el barrio más barato es Bosa Piamonte ubicado en la zona occidental de Bogotá, con inmuebles en venta con un costo promedio de 1.2 millones de Pesos Colombianos por metro cuadrado.\n",
        "\n",
        "Finalmente, si se analiza la ubicación de los barrios mostrados en ambos gráficos, es posibles notar que los barrios más caros se ubican en la zona norte de Bogotá."
      ],
      "metadata": {
        "id": "RrcaIflRvJoO"
      }
    }
  ]
}